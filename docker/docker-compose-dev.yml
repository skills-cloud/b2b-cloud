version: '3.8'

services:
  nginx:
    image: b2b-cloud/nginx
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
      target: nginx
    restart: always
    depends_on:
      - app-api
    volumes:
      - ../../www/storage:/www/storage
      - ../docker/nginx/dev/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 10021:80
    networks:
      - b2b-cloud

  app-api: &app-api
    image: b2b-cloud/app
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
      target: app
    restart: always
    depends_on:
      - pg
      - redis
    volumes:
      - ../../www/storage:/www/storage
      - ../../www/shared:/shared
      - ../:/app
    env_file:
      - env-file/dev/app.env
    command: './docker/entry-point/entry-point.sh django'
    networks:
      - b2b-cloud

  app-api-celery:
    <<: *app-api
    ports: [ ]
    command: './docker/entry-point/entry-point.sh django-celery'

  app-api-celery-beat:
    <<: *app-api
    ports: [ ]
    command: './docker/entry-point/entry-point.sh django-celery-beat'


  pg:
    image: postgres:13.2
    restart: always
    user: postgres
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_DB=cloud
      - POSTGRES_PASSWORD=not1pass
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PGUSER=postgres
    volumes:
      - ../../www/.docker-data/postgres:/var/lib/postgresql/data
    ports:
      - 10020:5432
    networks:
      - b2b-cloud

  redis:
    image: redis:6.2.4-alpine
    restart: always
    volumes:
      - ../../www/.docker-data/redis:/data/
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - b2b-cloud


networks:
  b2b-cloud:
    ipam:
      driver: default
