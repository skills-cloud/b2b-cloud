version: '3.8'

services:
  nginx:
    image: $CI_REGISTRY_IMAGE/nginx:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
      target: nginx
    restart: always
    depends_on:
      - app-api
    volumes:
      - /work/data/${PROJECT_PREFIX}_${CI_COMMIT_REF_SLUG}/storage:/www/storage
      - ../docker/nginx/demo/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 127.0.0.1:83:80

  app-api: &app-api
    image: $CI_REGISTRY_IMAGE/app:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
      target: app
    restart: always
    depends_on:
      - pg
      - redis
    volumes:
      - /work/data/${PROJECT_PREFIX}_${CI_COMMIT_REF_SLUG}/storage:/www/storage
    env_file:
      - env-file/demo/app.env
    command: './docker/entry-point/entry-point.sh django'

  pg:
    image: postgres:13.2
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_DB=t2t
      - POSTGRES_PASSWORD=not1pass
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PGUSER=postgres
    volumes:
      - /work/data/${PROJECT_PREFIX}_${CI_COMMIT_REF_SLUG}/postgres:/var/lib/postgresql/data

  redis:
    image: redis:6.2.2-alpine
    restart: always
    volumes:
      - /work/data/${PROJECT_PREFIX}_${CI_COMMIT_REF_SLUG}/redis:/data/
    environment:
      - PYTHONUNBUFFERED=1

