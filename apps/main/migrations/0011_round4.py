# Generated by Django 3.2.5 on 2021-11-04 09:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dictionary', '0002_round1_imports'),
        ('main', '0010_round3_6'),
    ]

    operations = [
        migrations.CreateModel(
            name='FunPointType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('name', models.CharField(max_length=500, verbose_name='название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание')),
                ('organization', models.ForeignKey(blank=True, help_text='глобальный тип, если оставить это поле пустым', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fun_points_types', to='main.organization', verbose_name='заказчик')),
            ],
            options={
                'verbose_name': 'модули / тип функциональной точки',
                'verbose_name_plural': 'модули / типы функциональных точек',
                'ordering': ['name'],
                'unique_together': {('organization', 'name')},
            },
        ),
        migrations.CreateModel(
            name='FunPointTypeDifficultyLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('name', models.CharField(max_length=500, verbose_name='название')),
                ('factor', models.FloatField(default=1, verbose_name='коэффициент')),
                ('sorting', models.IntegerField(default=0, verbose_name='сортировка')),
                ('fun_point_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='difficulty_levels', to='main.funpointtype', verbose_name='уровень сложности')),
            ],
            options={
                'verbose_name': 'уровень сложности',
                'verbose_name_plural': 'уровни сложности',
                'ordering': ['sorting', 'id'],
                'unique_together': {('fun_point_type', 'name')},
            },
        ),
        migrations.CreateModel(
            name='FunPointTypePositionLaborEstimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('hours', models.FloatField(default=1, help_text='в часах', verbose_name='норматив')),
                ('sorting', models.IntegerField(default=0, verbose_name='сортировка')),
                ('fun_point_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions_labor_estimates', to='main.funpointtype', verbose_name='уровень сложности')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fun_points_types_labor_estimates', to='dictionary.position', verbose_name='должность')),
            ],
            options={
                'verbose_name': 'норматив трудозатрат',
                'verbose_name_plural': 'нормативы трудозатрат',
                'ordering': ['sorting', 'id'],
                'unique_together': {('fun_point_type', 'position')},
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('name', models.CharField(max_length=500, verbose_name='название')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='дата начала')),
                ('deadline_date', models.DateField(blank=True, null=True, verbose_name='срок')),
                ('goals', models.TextField(blank=True, null=True, verbose_name='цели')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание')),
                ('sorting', models.IntegerField(default=0, verbose_name='сортировка')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='modules', to=settings.AUTH_USER_MODEL, verbose_name='руководитель')),
            ],
            options={
                'verbose_name': 'модуль',
                'verbose_name_plural': 'модули',
                'ordering': ['sorting', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ModuleFunPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('name', models.CharField(max_length=500, verbose_name='название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание')),
                ('sorting', models.IntegerField(default=0, verbose_name='сортировка')),
                ('difficulty_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fun_points', to='main.funpointtypedifficultylevel', verbose_name='уровень сложности')),
                ('fun_point_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='fun_points', to='main.funpointtype', verbose_name='тип')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fun_points', to='main.module', verbose_name='модуль')),
            ],
            options={
                'verbose_name': 'функциональная точка',
                'verbose_name_plural': 'функциональные точки',
                'ordering': ['sorting', 'id'],
                'unique_together': {('module', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ModulePositionLaborEstimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('count', models.PositiveIntegerField(default=1, verbose_name='кол-во')),
                ('hours', models.FloatField(default=1, verbose_name='чел/часов')),
                ('sorting', models.IntegerField(default=0, verbose_name='сортировка')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions_labor_estimates', to='main.module', verbose_name='модуль')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules_positions_labor_estimates', to='dictionary.position', verbose_name='должность')),
            ],
            options={
                'verbose_name': 'норматив трудозатрат',
                'verbose_name_plural': 'нормативы трудозатрат',
                'ordering': ['sorting', 'id'],
                'unique_together': {('module', 'position')},
            },
        ),
        migrations.AlterModelOptions(
            name='organizationproject',
            options={'ordering': ['name'], 'verbose_name': 'проект', 'verbose_name_plural': 'проекты'},
        ),
        migrations.AlterModelOptions(
            name='organizationprojectcarditem',
            options={'verbose_name': 'организации / карточка проекта организации', 'verbose_name_plural': 'организации / карточки проектов организаций'},
        ),
        migrations.AlterModelOptions(
            name='organizationprojectcarditemtemplate',
            options={'verbose_name': 'организации / карточка-шаблон проекта организации', 'verbose_name_plural': 'организации / карточки-шаблоны проектов организаций'},
        ),
        migrations.AlterModelOptions(
            name='request',
            options={'ordering': ['priority', '-id'], 'verbose_name': 'запрос', 'verbose_name_plural': 'запросы'},
        ),
        migrations.AlterModelOptions(
            name='requestrequirement',
            options={'ordering': ['sorting', 'name'], 'verbose_name': 'запросы / требование', 'verbose_name_plural': 'запросы / требования'},
        ),
        migrations.AlterModelOptions(
            name='requestrequirementcv',
            options={'ordering': ['-id'], 'verbose_name': 'анкета', 'verbose_name_plural': 'анкеты'},
        ),
        migrations.AlterModelOptions(
            name='requesttype',
            options={'ordering': ['name'], 'verbose_name': 'запросы / тип запроса', 'verbose_name_plural': 'запросы / типы запросов'},
        ),
        migrations.AlterModelOptions(
            name='timesheetrow',
            options={'ordering': ['-date_from'], 'verbose_name': 'запросы / таймшиты', 'verbose_name_plural': 'запросы / таймшиты'},
        ),
        migrations.RemoveField(
            model_name='request',
            name='project',
        ),
        migrations.AlterField(
            model_name='request',
            name='organization_project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='requests', to='main.organizationproject', verbose_name='проект'),
        ),
        migrations.DeleteModel(
            name='Project',
        ),
        migrations.AddField(
            model_name='module',
            name='organization_project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='main.organizationproject', verbose_name='проект'),
        ),
        migrations.AlterUniqueTogether(
            name='module',
            unique_together={('organization_project', 'name')},
        ),
    ]
