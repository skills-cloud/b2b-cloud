# Generated by Django 3.2.5 on 2022-09-05 11:52

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('dictionary', '0009_auto_20220905_1452'),
        ('main', '0028_round6'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='funpointtype',
            options={'ordering': ['name'], 'verbose_name': 'modules / fuctional point type', 'verbose_name_plural': 'modules / fuctional point types'},
        ),
        migrations.AlterModelOptions(
            name='timesheetrow',
            options={'ordering': ['-date_from'], 'verbose_name': 'requests / timesheets', 'verbose_name_plural': 'requests / timesheets'},
        ),
        migrations.AlterField(
            model_name='funpointtype',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='funpointtype',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='funpointtypedifficultylevel',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='funpointtypedifficultylevel',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='funpointtypepositionlaborestimate',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='funpointtypepositionlaborestimate',
            name='sorting',
            field=models.IntegerField(default=0, verbose_name='sorting'),
        ),
        migrations.AlterField(
            model_name='funpointtypepositionlaborestimate',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='module',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='module',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='module',
            name='work_days_count',
            field=models.IntegerField(blank=True, help_text='filled automatically based on a five day work week if left empty<br>Mon-Fri deadline_date-start_date', null=True, verbose_name='workdays count'),
        ),
        migrations.AlterField(
            model_name='modulefunpoint',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='modulefunpoint',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='modulepositionlaborestimate',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='modulepositionlaborestimate',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='contacts_email',
            field=models.CharField(blank=True, max_length=500, null=True, verbose_name='contact e-mail'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='organizationcontractoruserrole',
            name='role',
            field=models.CharField(choices=[('admin', 'Администратор'), ('pfm', 'Руководитель портфеля проектов'), ('pm', 'Руководитель проекта'), ('rm', 'Ресурсный менеджер')], max_length=50, verbose_name='role'),
        ),
        migrations.AlterField(
            model_name='organizationproject',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='organizationproject',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='organizationprojectcarditem',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='organizationprojectcarditem',
            name='organization_project',
            field=models.ForeignKey(blank=True, help_text='required only for root cards', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cards_items', to='main.organizationproject', verbose_name='organization project'),
        ),
        migrations.AlterField(
            model_name='organizationprojectcarditem',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='organizationprojectcarditemtemplate',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='organizationprojectcarditemtemplate',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='organizationprojectuserrole',
            name='role',
            field=models.CharField(choices=[('admin', 'Администратор'), ('pfm', 'Руководитель портфеля проектов'), ('pm', 'Руководитель проекта'), ('rm', 'Ресурсный менеджер')], max_length=50, verbose_name='role'),
        ),
        migrations.AlterField(
            model_name='request',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='request',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='requestrequirement',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='requestrequirement',
            name='experience_years',
            field=models.FloatField(blank=True, help_text='float', null=True, verbose_name='experience years'),
        ),
        migrations.AlterField(
            model_name='requestrequirement',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='requestrequirementcompetence',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='requestrequirementcompetence',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='requestrequirementcv',
            name='attributes',
            field=models.JSONField(default=dict, help_text='avoid editing if you do not know the purpose of this field', verbose_name='additional attributes'),
        ),
        migrations.AlterField(
            model_name='requestrequirementcv',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='requestrequirementcv',
            name='date_from',
            field=models.DateField(blank=True, null=True, verbose_name='working on project from'),
        ),
        migrations.AlterField(
            model_name='requestrequirementcv',
            name='date_to',
            field=models.DateField(blank=True, null=True, verbose_name='working on project to'),
        ),
        migrations.AlterField(
            model_name='requestrequirementcv',
            name='request_requirement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cv_links', to='main.requestrequirement', verbose_name='requiest requirement'),
        ),
        migrations.AlterField(
            model_name='requestrequirementcv',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.AlterField(
            model_name='timesheetrow',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано'),
        ),
        migrations.AlterField(
            model_name='timesheetrow',
            name='date_from',
            field=models.DateField(db_index=True, default=django.utils.timezone.now, verbose_name='start date'),
        ),
        migrations.AlterField(
            model_name='timesheetrow',
            name='date_to',
            field=models.DateField(blank=True, null=True, verbose_name='end date'),
        ),
        migrations.AlterField(
            model_name='timesheetrow',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='обновлено'),
        ),
        migrations.CreateModel(
            name='PartnerNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('name', models.CharField(max_length=255)),
                ('network_operator', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dictionary.organization', verbose_name='network_operator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('services_type', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('OUTSOURCE', 'Outsource'), ('OUTSTAFF', 'Outstaff')], max_length=255, verbose_name='services_type'), size=None)),
                ('confirmed', models.BooleanField(default=False, verbose_name='confirmed')),
                ('accreditation', models.BooleanField(default=False, verbose_name='accreditation')),
                ('blocked', models.BooleanField(default=False, verbose_name='blocked')),
                ('category', models.ManyToManyField(related_name='partners', to='dictionary.Category', verbose_name='competence')),
                ('certificate', models.ManyToManyField(to='dictionary.Certificate', verbose_name='certificate')),
                ('competence', models.ManyToManyField(to='dictionary.Competence', verbose_name='competence')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dictionary.organization', verbose_name='partners')),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='main.partnernetwork', verbose_name='network')),
                ('segment', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dictionary.industrysector')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
